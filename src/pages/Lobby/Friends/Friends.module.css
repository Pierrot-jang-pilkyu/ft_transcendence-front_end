.container {
    position: fixed;
    width: 50vw;
    height: 50vh;
    top: 30%;
    left: 30%;
    background: rgba(0, 0, 0, 0.2);
}

.input_container {
    display: flex;
    flex-direction: row;
	justify-content: space-between;
	position: fixed;
    bottom: 3vh;
}

.button {
	flex-shrink: 0;
	border-radius: 12px;
	background: #FFF;
	box-shadow: 0px 0px 22px 4px rgba(32, 16, 16, 0.20);
}

.button:hover {
	--tw-border-opacity: 1;
    border-color: hsl(var(--b3) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
}

.friend {
	grid-area: friend;
	width: 27vw;
	height: 9vh;
	padding-left: 2vw;
	position: relative;
	gap: 3vw;
	display: flex;
	flex-direction: row;
	align-items: center;
}

.friend_font {
	color: #285ADA;
	text-align: center;
    font-family: 'Noto Sans', sans-serif;
	font-size: 32px;
	font-style: normal;
	font-weight: 700;
	line-height: normal;
}

.friend_container {
    display: flex;
    flex-direction: row;
	justify-content: space-between;
    height: 5vh;
    background: rgba(0, 0, 0, 0);
}

.h_5 {
    height: 5vh;
    aspect-ratio: 1 / 1;
}

.rounded-full {
    border-radius: 50%;
}

.btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
    height: 3rem/* 48px */;
    padding-left: 1rem/* 16px */;
    padding-right: 1rem/* 16px */;
    min-height: 3rem/* 48px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1em;
    gap: 0.5rem/* 8px */;
    font-weight: 600;
    text-decoration-line: none;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    text-transform: var(--btn-text-case, uppercase);
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline-color: hsl(var(--bc) / 1);

	position: relative;
	right: 0.2vw;
	bottom: 0.1vh;
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none;
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none;
}
.btn-group > input[type="radio"].btn {
    appearance: none;
}
.btn-group > input[type="radio"].btn:before {
    content: attr(data-title);
}
.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
    width: auto;
    appearance: none;
}
.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
    width: auto;
    appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}
@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--b3) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    }
}
@media (hover: hover) {
    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
    }
}
@media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.2;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2;
    }
}
@media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.2;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2;
    }
}
@media (hover: hover) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity));
    }
}
@media (hover: hover) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity));
    }
}
.btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}
.btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}
.btn:focus {
	outline: none;
}
.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}
.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor;
}
.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-color: hsl(var(--p) / 1);
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: hsl(var(--p) / 1);
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: hsl(var(--p) / 1);
}
.btn-group .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
.btn-group .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-right-radius: 0;
}
.btn-group .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
.btn-group-horizontal .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-right-radius: 0;
}
.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
}
.btn-group-vertical .btn:first-child:not(:last-child) {
    margin-left: -0px;
    margin-top: -1px;
    border-top-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-top-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
.btn-group-vertical .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem/* 8px */);
    border-bottom-right-radius: var(--rounded-btn, 0.5rem/* 8px */);
}


/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* ------------------------------ input ------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------- */


.input {
    flex-shrink: 1;
    height: 3rem/* 48px */;
    padding-left: 1rem/* 16px */;
    padding-right: 1rem/* 16px */;
    font-size: 0.875rem/* 14px */;
    font-size: 1rem/* 16px */;
    line-height: 1.25rem/* 20px */;
    line-height: 2;
    line-height: 1.5rem/* 24px */;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem/* 8px */);
	position: relative;
	right: 0.5vw;
}
.input-group > .input {
    isolation: isolate;
}
.input-group > *,
  .input-group > .input,
  .input-group > .textarea,
  .input-group > .select {
    border-radius: 0px;
}
.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
}
.input:focus,
  .input:focus-within {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2);
}
.input:focus,
  .input:focus-within {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2);
}
.input-disabled,
  .input:disabled,
  .input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}
.input-disabled,
  .input:disabled,
  .input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}
.input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}
.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem/* 28px */;
    width: 24rem/* 384px */;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    padding-left: 2rem/* 32px */;
}
.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    left: 0.5rem/* 8px */;
    top: 50%;
    aspect-ratio: 1 / 1;
    height: 0.75rem/* 12px */;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor;
    opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
    content: "";
    position: absolute;
    left: 1.25rem/* 20px */;
    top: 50%;
    height: 0.5rem/* 8px */;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor;
    opacity: 0.6;
}

.input-bordered {
    --tw-border-opacity: 0.2;
}

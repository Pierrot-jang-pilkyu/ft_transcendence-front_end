{
  "version": 3,
  "sources": ["../../stream-to-blob/index.js"],
  "sourcesContent": ["/*! stream-to-blob. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global Blob */\n\nmodule.exports = streamToBlob\n\nfunction streamToBlob (stream, mimeType) {\n  if (mimeType != null && typeof mimeType !== 'string') {\n    throw new Error('Invalid mimetype, expected string.')\n  }\n  return new Promise((resolve, reject) => {\n    const chunks = []\n    stream\n      .on('data', chunk => chunks.push(chunk))\n      .once('end', () => {\n        const blob = mimeType != null\n          ? new Blob(chunks, { type: mimeType })\n          : new Blob(chunks)\n        resolve(blob)\n      })\n      .once('error', reject)\n  })\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAGA,WAAO,UAAU;AAEjB,aAAS,aAAc,QAAQ,UAAU;AACvC,UAAI,YAAY,QAAQ,OAAO,aAAa,UAAU;AACpD,cAAM,IAAI,MAAM,oCAAoC;AAAA,MACtD;AACA,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAM,SAAS,CAAC;AAChB,eACG,GAAG,QAAQ,WAAS,OAAO,KAAK,KAAK,CAAC,EACtC,KAAK,OAAO,MAAM;AACjB,gBAAM,OAAO,YAAY,OACrB,IAAI,KAAK,QAAQ,EAAE,MAAM,SAAS,CAAC,IACnC,IAAI,KAAK,MAAM;AACnB,kBAAQ,IAAI;AAAA,QACd,CAAC,EACA,KAAK,SAAS,MAAM;AAAA,MACzB,CAAC;AAAA,IACH;AAAA;AAAA;",
  "names": []
}
